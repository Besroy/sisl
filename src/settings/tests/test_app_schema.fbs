native_include "utility/non_null_ptr.hpp";

namespace testapp;

attribute "hotswap";
attribute "deprecated";


table DurabilityConfig {
    w: string (hotswap);
    j: bool = false (hotswap);
    wtimeout: uint32 = 2000 (hotswap);
}

table DBAuth { //MongoDB authentication
    dbauth_enabled: bool (hotswap);
    dbauthUsernamePath: string (hotswap);
    dbauthPasswordPath: string (hotswap);
}

//this section containts settings that are different for each replica set or even replica within a set
//if some setting is common/constant for all replicas and all replica sets in a keyspace it should be here and instead should be place in a corresponding section
table Coordinator /*TODO: needs to be broken down by physical subcomponents: Keyspace | Shard | Replica */ {
    //Keyspace keyspace (required);
    //Shard shard (required);
    //Replica replica (required);

    id: uint64 = 0 (hotswap);                		//TODO: move to Replica
    shardId: string (hotswap);           		    //TODO: move to Shard
    replicaSetId: string (hotswap);                 //TODO: move to Shard
    databaseName: string;                           //TODO: move to Shard
    channelType: string;                            //TODO: move to DatabaseSettings
    unixSocketFile: string;                         //TODO: move to DatabaseSettings
    durabilityConfig: DurabilityConfig;             //TODO: move to Keyspace
    databaseHost: string;                           //TODO: move to DatabaseSettings
    databasePort: uint32 = 27017;                   //TODO: move to DatabaseSettings
    adminPort: uint32 = 5050;                       //TODO: move to HttpServer
    dataPort: uint32 = 5051;                        //TODO: move to GrpcServer
    hiddenGrpcPort: uint32 = 5051;                  // In mib testing we use different ports which can be passed here
    coordEndpoint: string (hotswap);         		//TODO: move to Replica
    bindAddress: string;                            //TODO: move to Config
    dbauth: DBAuth(required);                       //TODO: move to Replica
    keyspace: string (required);                    //TODO: move to Global
    region: string;                                 //TODO: move to Replica
    zone: string (hotswap);                  		//TODO: move to Replica
    replicaName: string (hotswap);           		//TODO: move to Replica
    tlsCACertPath: string;                          //TODO: move to Replica
    tlsCertPath: string;                            //TODO: move to Replica
    tlsKeyPath: string;                             //TODO: move to Replica
    latchFile: string;
}

table DatabaseSettings {
    databaseHost: string;                          
    databasePort: uint32 = 27017;                   
    numThreads: uint32 = 8;
}

table DBConnection {
    minDBConnections: uint32 = 2;
    maxDBConnections: uint32 = 10;
    dbConnectionOptimalLoad: uint64 = 100 (hotswap);
    dbConnectionMaxLoad: uint64 (deprecated);
}

table Glog {
    FLAGS_v: uint32 = 1;
    FLAGS_max_log_size: uint32 = 50;
    FLAGS_logtostderr: uint32 = 0;
    //Buffer log messages logged at this level or lower";0-INFO, 1-WARNING, 2-ERROR, 3-FATAL
    FLAGS_logbuflevel: int32 = 0;
    //copy GLOG levels at above this level to stderr;
    FLAGS_stderrthreshold: int32 = 3;
    FLAGS_alsologtostderr: uint32 = 0;
    FLAGS_vmodule: string (hotswap);
}

table Config {
    database: DatabaseSettings;
    dbconnection: DBConnection;
    glog: Glog;
}

table TestAppSettings {
    version: uint32;
    config: Config;
}

root_type TestAppSettings;

